# This is workflow is for MSI and deploy to artifactory. 
name: autorostering-msi-build

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  RELEASE_VERSION: '1.3.0.0'
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'adv-build-svc' }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref.name }}
    
    - name: Configure AWS 
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::592311462240:role/advanced-artefacts-gh-advancedcsg
        aws-region: eu-west-2
        
    - name: Advanced Artefacts CLI - Setup
      uses: advancedcsg/actions-setup-advanced-artefacts-cli@v1.1.0
        
    #API Build
    - name: setup .net core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        source-url: https://advanced-592311462240.d.codeartifact.eu-west-2.amazonaws.com/nuget/nuget-release/v3/index.json
    
    - name: Build .net core solution
      working-directory: ./WEB/Backend/ESolve
      run: dotnet build ESolve.sln --configuration Release
        
    - run: dotnet new tool-manifest
      working-directory: ./WEB/Backend/ESolve/ESolve
    
    - run: dotnet tool install dotnet-ef --version 7.0.1
      working-directory: ./WEB/Backend/ESolve/ESolve
      
    - run: dotnet ef migrations script --idempotent --project ESolve.csproj --output migrations.sql
      working-directory: ./WEB/Backend/ESolve/ESolve

    - run: sed -i '1s/^\xEF\xBB\xBF//' migrations.sql
      working-directory: ./WEB/Backend/ESolve/ESolve
    
    #UI Build
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}        
    
    - run: npm install -g @angular/cli@14.1.2
      working-directory: ./WEB/Frontend      
    
    - run: npm config set legacy-peer-deps true
      working-directory: ./WEB/Frontend
    
    - run: npm install
      working-directory: ./WEB/Frontend
    
    - run: npm run build
      working-directory: ./WEB/Frontend

    #Create AutoRostering folder
    - name: Copy builds to AutoRostering folder
      working-directory: ${{ github.workspace }}
      run: |
        mkdir ./AutoRostering
        mkdir ./AutoRostering/api
        cp -r ./WEB/Backend/ESolve/ESolve/bin/Release/net6.0/* ./AutoRostering/api/
        cp -r ./WEB/Backend/ESolve/ESolve/migrations.sql ./AutoRostering/
        cp -r ./WEB/Frontend/dist/* ./AutoRostering/
        if [ "${{inputs.environment}}" = "Development" ]; then
          rm ./AutoRostering/api/appsettings.Production.json ./AutoRostering/api/appsettings.json
          mv ./AutoRostering/api/appsettings.Development.json ./AutoRostering/api/appsettings.json 
        fi
        if [ "${{inputs.environment}}" = "Production" ]; then
          rm ./AutoRostering/api/appsettings.Development.json ./AutoRostering/api/appsettings.json
          mv ./AutoRostering/api/appsettings.Production.json ./AutoRostering/api/appsettings.json 
        fi
        
    - name: Publish setup artifact
      uses: actions/upload-artifact@v2
      with:
        name: AutoRostering
        path: ./AutoRostering

  msi_build:
    runs-on: windows-latest
    needs: build
    
    steps:      
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref.name }}
    
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: AutoRostering
        path: ./WixInstaller/AutoRostering
        
    - name: Setup MS Build
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5 

    - name: Restore NuGet packages
      working-directory: ${{github.workspace}}/WixInstaller
      run: nuget restore AutoRosteringSetup.sln
      
    - name: Build AR msi
      working-directory: ${{github.workspace}}/WixInstaller
      run: |
        msbuild AutoRosteringSetup.sln -t:build -verbosity:diag -property:Configuration=Release -p:Platform=x64 -p:Build_Number=21901 -p:VisualStudioVersion=17.0
        ren ./AutoRosteringSetup/bin/x64/Release/AutoRostering.msi AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.msi
        
    - name: Publish setup artifact
      uses: actions/upload-artifact@v2
      with:
        name: AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.msi
        path: ${{github.workspace}}/WixInstaller/AutoRosteringSetup/bin/x64/Release/AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.msi
        
  publish_build:
    runs-on: ubuntu-latest
    needs: msi_build
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'adv-build-svc' }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref.name }}
    
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.msi
        path: ./AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.msi
    
    - uses: vimtor/action-zip@v1
      with:
        files: ./AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.msi
        dest: AutoRosteringMSI.zip
        
    - name: Configure AWS 
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::592311462240:role/advanced-artefacts-gh-advancedcsg
        aws-region: eu-west-2
    
    - name: Advanced Artefacts CLI - Setup
      uses: advancedcsg/actions-setup-advanced-artefacts-cli@v1.1.0
        
    - name: publish_to_artifactory with version tag
      run: |
        adv-do-artefacts generic-artefact publish --repository "autorostering-dev" --source-path "AutoRosteringMSI.zip" --target-path "autorostering/Setup/${{ inputs.environment }}/${{ env.RELEASE_VERSION }}/${{ github.ref_name }}/AutoRostering_${{ env.RELEASE_VERSION }}_${{ inputs.environment }}.zip" --tag-bu "commercial-and-private" --tag-div "hcm" --tag-proj "rost"
# on:
#   workflow_dispatch:
#     inputs:
#       ENVIRONMENT:
#         description: 'Environment to run tests against'
#         type: environment
#         required: true

# jobs:
#   log-the-inputs:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: api
#         working-directory: ./AutoRosteringSetup
#         run: 
#           mv ${{github.workspace}}/AutoRosteringSetup/AutoRosteringSetup.wixproj ${{github.workspace}}/AutoRosteringSetup/${{ inputs.ENVIRONMENT }}_${{ github.ref_name }}.wixproj

#       - name: Publish setup artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: AutoRostering
#           path: ./AutoRosteringSetup/${{ inputs.ENVIRONMENT }}_${{ github.ref_name }}.wixproj

# on:
#   push:
#     branches: [ main ]
#     paths:
#     - '.github/workflows/autorostering_msi.yaml'
#   pull_request:
#     branches: [ main ]

# env:
#   RELEASE_VERSION: '1.3.0'
#   ENVIRONMENT: 'DEVELOPMENT'

# jobs:
#   build:
#     runs-on: windows-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           ref: ${{ github.event.pull_request.head.ref }}

#       - name: Copy files to root and create AR folder
#         working-directory: ${{github.workspace}}
#         run: |
#           mkdir AutoRostering
#           mkdir AutoRostering/api
#           cp -r ./WEB/Backend/ESolve/ESolve/bin/Release/net6.0/* ./AutoRostering/api/
#           cp -r ./WEB/Backend/ESolve/ESolve/migrations.sql ./AutoRostering/
#           cp -r ./WEB/Frontend/dist/* ./AutoRostering/
      
#       - name: Setup MS Build
#         uses: microsoft/setup-msbuild@v1.1
        
#       - name: Setup NuGet
#         uses: NuGet/setup-nuget@v1.0.5 

#       - name: Restore NuGet packages
#         working-directory: ${{github.workspace}}
#         run: nuget restore AutoRosteringSetup.sln
        
#       - name: Build AR msi
#         working-directory: ${{github.workspace}}
#         run: |
#           msbuild AutoRosteringSetup.sln -t:build -verbosity:diag -property:Configuration=Release -p:Platform=x64 -p:Build_Number=21901 -p:VisualStudioVersion=17.0
#           ren ./AutoRosteringSetup/bin/x64/Release/AutoRostering.msi CustomName.msi

#       - name: Publish setup artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: AutoRostering_${{env.RELEASE_VERSION}}.msi
#           path: ${{github.workspace}}/AutoRosteringSetup/bin/x64/Release/CustomName.msi

  #   runs-on: ubuntu-latest
        
  #   steps:      
  #   - uses: actions/checkout@v3
  #     with:
  #       ref: ${{ github.event.pull_request.head.ref }}
    
  #   - name: Publish setup artifact
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: AutoRostering_${{env.RELEASE_VERSION}.msi
  #       path: ${{github.workspace}}/WEB/Backend/ESolve/ESolve/migrations.sql

  # build2:

  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:      
  #   - uses: actions/checkout@v3
  #     with:
  #       ref: ${{ github.event.pull_request.head.ref }}
  

    # - name: convert to utf-8
    #   working-directory: ./WEB/Backend/ESolve/ESolve
    #   run: sed -i '1s/^\xEF\xBB\xBF//' migrations.sql

    # - name: Copy files to root and create AR folder
    #   run: |
    #     mkdir AutoRostering
    #     mkdir AutoRostering/api
    #     cp -r ./WEB/Backend/ESolve/ESolve/bin/Release/net6.0/* ./AutoRostering/api/
    #     cp -r ./WEB/Backend/ESolve/ESolve/migrations.sql ./AutoRostering/
    #     cp -r ./WEB/Frontend/dist/* ./AutoRostering/
        
    # - name: setup .net core
    #   uses: actions/setup-dotnet@v3
    #   with:
    #     dotnet-version: 6.0.x

    # - name: Build MSI
    #   working-directory: ${{github.workspace}}
    #   run: dotnet build AutoRosteringSetup.sln -c Release -p:Platform=x64 -p:Build_Number=21901 -p:VisualStudioVersion=17.0
  
    # - name: Copy files to root and create AR folder
    #   run: |
    #     mkdir AutoRostering
    #     mkdir AutoRostering/api
    #     cp -r ./WEB/Backend/ESolve/ESolve/bin/Release/net6.0/* ./AutoRostering/api/
    #     cp -r ./WEB/Backend/ESolve/ESolve/migrations.sql ./AutoRostering/
    #     cp -r ./WEB/Frontend/dist/* ./AutoRostering/
      
    # - name: Setup MS Build
    #   uses: microsoft/setup-msbuild@v1.1
      
    # - name: Setup NuGet
    #   uses: NuGet/setup-nuget@v1.0.5 

    # - name: Restore NuGet packages
    #   working-directory: ${{github.workspace}}
    #   run: nuget restore AutoRosteringSetup.sln
      
    # - name: Build AR msi
    #   working-directory: ${{github.workspace}}
    #   run: msbuild AutoRosteringSetup.sln -t:build -verbosity:diag -property:Configuration=Release -p:Platform=x64 -p:Build_Number=21901 -p:VisualStudioVersion=17.0 